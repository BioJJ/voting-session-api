spring.datasource.url=jdbc:postgresql://trumpet.db.elephantsql.com/rmcjiclh
spring.datasource.username=rmcjiclh
spring.datasource.password=Th0W6KhhJVFOUi9qGAH0j5JSNqCJ2coI

# apontamos para o JPA e Hibernate qual é o Dialeto do banco de dados
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
# ou create, create-drop, none

# deixamos o hibernate responsável por ler nossas entidades e criar as tabelas do nosso banco de dados automaticamente
#spring.jpa.hibernate.ddl-auto=create
# configuração do Hibernate para reconhecer o nome de tabelas em caixa alta
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# configurações de log
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

security.jwt.signing-key=byBzb2wgbsOjbyDDqSBhenVs

security.oauth2.client.scope=password


# Configurações do pool de conexões (opcional, mas recomendado)
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=pool-datasource
spring.datasource.hikari.max-lifetime=2000000
spring.datasource.hikari.connection-timeout=30000